{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/start-chat/start-chat.component.css","webpack:///./src/app/start-chat/start-chat.component.html","webpack:///./src/app/start-chat/start-chat.component.ts","webpack:///./src/assets/js/System.js","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACE;AACc;AACjB;AAEtD,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACrC,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mFAAkB,EAAC;IACxD,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACxC,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,EAAC;CACjD,CAAC;AAUF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAR5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrB7B,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,SAAS,CAAC;IACpB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AAGT;AACU;AAEA;AACc;AACjB;AAEH;AAkBnD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,mFAAkB;gBAClB,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,iEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/BtB,mB;;;;;;;;;;;ACAA,6C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,qe;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA8D;AACX;AACV;AAEY;AAOrD;IAOE,wBAAqB,MAAc,EAAU,QAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAL1D,WAAM,GAAG,cAAc,CAAC;QACxB,WAAM,GAAG,IAAI,2DAAM,EAAE,CAAC;QACtB,YAAO,GAAG,OAAO,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;IAE0C,CAAC;IAEvE,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG;YACV,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,KAAK;SAChB,CAAC;IACJ,CAAC;IACM,iCAAQ,GAAf;QAAA,iBAaC;QAZC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACvE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;iBAClC,SAAS,CACR,UAAC,IAAI;gBACH,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/D,CAAC,EACD,UAAC,GAAG,IAAK,YAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,EAAE,oBAAoB,EAAE,CAAC,CAAC,EAApE,CAAoE,CAC9E,CAAC;QACN,CAAC;IACH,CAAC;IA7BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQ6B,sDAAM,EAAoB,iEAAW;OAPvD,cAAc,CA8B1B;IAAD,qBAAC;CAAA;AA9B0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AACO;AACC;AAGnD,IAAM,SAAS,GAAW,uBAAuB,CAAC;AAClD,IAAM,aAAa,GAAG;IACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH;AAID;IACE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,kCAAY,GAAnB,UAAoB,IAAW;QAC7B,sBAAsB;QACtB,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,SAAS,GAAG,WAAW,EAAG,OAAO,EAAE,aAAa,CAAC,CAAC;IAClF,CAAC;IAXU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,+DAAU;OADzB,WAAW,CAYvB;IAAD,kBAAC;CAAA;AAZuB;;;;;;;;;;;;ACdxB,mB;;;;;;;;;;;ACAA,0BAA0B,SAAS,S;;;;;;;;;;;;;;;;;;;;;;;;;;ACAe;AACgB;AACb;AAOrD;IAGE,4BAAoB,KAAqB,EACrB,MAAc,EACd,WAAwB;QAFxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,qCAAQ,GAAR;QACE,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IACM,kCAAK,GAAZ;QAEE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAbU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAI2B,8DAAc;YACb,sDAAM;YACD,iEAAW;OALjC,kBAAkB,CAc9B;IAAD,yBAAC;CAAA;AAd8B;;;;;;;;;;;;;ACT/B;AAAA;AAAA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { StartChatComponent } from './start-chat/start-chat.component';\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'start/:username', component: StartChatComponent},\n  {path: 'chat', component: ChatComponent},\n  {path: '**', pathMatch: 'full', redirectTo: '/'}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ang-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { StartChatComponent } from './start-chat/start-chat.component';\nimport { ChatComponent } from './chat/chat.component';\n\nimport {UserService} from './service/user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    StartChatComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  chat works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"full-screen bg-wine center-col-flex\\\">\\n  <div class=\\\"form-wrapper\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\">\\n      <div id=\\\"form-message\\\" class=\\\"rounded-corners\\\"></div>\\n      <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Enter a screen name\\\" class=\\\"rounded-corners\\\">\\n      <input type=\\\"submit\\\" value=\\\"Enter\\\" class=\\\"marine-font marine-border bg-white rounded-corners\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport { System } from '../../assets/js/System.js';\nimport { Router } from '@angular/router';\nimport { IUser } from '../models/user';\nimport { UserService} from '../service/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public user: IUser;\n  private msgBox = 'form-message';\n  private system = new System();\n  private baseUri = 'start';\n  private isUserAdded = false;\n\n  constructor( private router: Router, private userServ: UserService) { }\n\n  ngOnInit() {\n    this.user = {\n      username: '',\n      isFree: false,\n      isTyping: false\n    };\n  }\n  public onSubmit() {\n    if (this.user.username.length < 6) {\n      this.system.displayFormMessage(this.msgBox, 'Username too short', 3);\n    } else {\n      this.userServ.registerUser(this.user)\n        .subscribe(\n          (user) => {\n            this.isUserAdded = true;\n            this.router.navigate([(this.baseUri + '/' + user.username)]);\n          },\n          (err) => this.system.displayFormMessage(this.msgBox, 'could not add user', 3)\n        );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { IUser } from '../models/user';\n\nconst serverUri: string = 'http://localhost:3000';\nconst headerOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  public registerUser(user: IUser) {\n    /*  Set request Body*/\n    const reqBody = JSON.stringify({\n      username: user.username,\n      isFree: user.isFree,\n      isTyping: user.isTyping\n    });\n    return this.http.post <IUser>(serverUri + '/user/add' , reqBody, headerOptions);\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n {{getId()}}\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap} from '@angular/router';\nimport { UserService} from '../service/user.service';\n\n@Component({\n  selector: 'app-start-chat',\n  templateUrl: './start-chat.component.html',\n  styleUrls: ['./start-chat.component.css']\n})\nexport class StartChatComponent implements OnInit {\n  private id;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userService: UserService) { }\n\n  ngOnInit() {\n    this.id = localStorage.getItem('_id');\n  }\n  public getId()\n  {\n    return this.id;\n  }\n}\n","/*\n *\tThis file contains general javascript code\n *\t@author: Oguntuberu Nathan O.\n *\t@date: 16-07-2018\n*/\nexport class System{\n    createAjaxObject()\n    {\n\t\t/*\t*/\n        let AjaxObject;\n        try{\n            AjaxObject = new XMLHttpRequest();\n        }catch(e){\n            try{\n                AjaxObject = new ActiveXObject('Msxml2.XMLHTTP');\n            }catch(ea){\n                try{\n                    AjaxObject = new ActiveXObject('Microsoft.XMLHTTP');\n                }catch(eb){\n                    AjaxObject = false;\n                }\n            }\n        }\n        return AjaxObject;\n    }\n\n    displayFormMessage(msgBox, msg_body, msg_type)\n    {\n        /*\n         *  This displays a defined message to the screen\n        */\n        var element = document.getElementById(msgBox);\n        element.innerHTML = msg_body;\n        element.style.display = \"block\";\n        switch(msg_type){\n            case 1: //  1 is for a good message\n                element.style.backgroundColor = '#3FAF7D';\n                break;\n            case 2: //  2 is for a process\n                element.style.backgroundColor = '#83B2C1';\n                break;\n            default: // else there is a problem\n                element.style.backgroundColor = '#EA9F9F';\n        }\n        setTimeout(function(){\n            element.style.display = \"none\";\n        }, 2000);\n    }\n\n    getTimeStamp()\n    {\n        /*  Returns number of seconds since midnight January 1st, 1970  */\n        var milliTime = new Date().getTime().toString();\n        milliTime = milliTime.substring(0, (milliTime.length - 3));\n        return milliTime;\n    }\n\t\n    getHash(value)\n    {\n        let req = System.createAjaxObject();\n        req.open('get', './processes/get-hash.php?val='+value);\n        req.send(null);\n        \n        req.onreadystatechange = function(){\n            if(req.readyState === 4)\n            {\n                return req.responseText;  \n            }\n        };\n    }\n    gotoPage(page_uri)\n    {\n        window.location = page_uri;\n    }\n    \n    /*  */\n    loadController(uri)\n    {\n        return '../app/controllers/'+uri;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}